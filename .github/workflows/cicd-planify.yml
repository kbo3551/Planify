name: CI/CD for Planify

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    # Java 및 Gradle 설치
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'

    # Gradle Build
    - name: Add execute permissions to gradlew
      run: chmod +x Planify/gradlew
    
    - name: Build WAR with Gradle
      working-directory: Planify
      run: ./gradlew clean build

    # Docker image Build
    - name: Build Docker image from Dockerfile
      working-directory: Planify
      run: docker build -t planify:latest .

    - name: Save Docker image to archive
      working-directory: Planify
      run: docker save planify:latest | gzip > planify.tar.gz

    # Set file permissions for SSH private key
    - name: Set permissions for SSH private key
      run: |
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > dev.pem
        chmod 600 dev.pem

    # Ensure old directories are cleaned
    - name: Clean up old directories
      run: |
        ssh -o StrictHostKeyChecking=no -i dev.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "rm -rf ~/planify.tar.gz"

    # Copy Docker image to server
    - name: Copy Docker image to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "Planify/Planify/planify.tar.gz"
        target: "~/planify.tar.gz"

    # Deploy Docker container on server
    - name: Deploy to server
      run: |
        ssh -o StrictHostKeyChecking=no -i dev.pem ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
        docker load --input ~/planify.tar.gz
        docker stop planify || true
        docker rm planify || true
        docker run -d --name planify -p 9350:8080 planify:latest
        EOF
